<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	                   http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	                   http://www.springframework.org/schema/context
        			   http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- 自动扫描(自动注入) -->
	<context:component-scan base-package="com.zjoin.love.ws.*" />

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:conf-dev/db-dev.properties" />

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<!--<property name="maxIdle" value="${maxIdle}"></property>-->
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"></property>
		<property name="filters" value="stat,log4j" /><!--,wall-->
		<property name="proxyFilters">
			<list>
				<ref bean="stat-wall" />
			</list>
		</property>
	</bean>

	<bean id="stat-wall" class="com.alibaba.druid.wall.WallFilter">
		<property name="config" ref="wall-config" />
	</bean>

	<bean id="wall-config" class="com.alibaba.druid.wall.WallConfig">
		<property name="multiStatementAllow" value="true" />
	</bean>

	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:Mapper/*.xml" />
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
							reasonable=false
							pageSizeZero=true
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>



	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<!-- 使用mapper3 用tk包-->
	<!-- 使用批量插入 需要配置properties 否则可以不写 -->
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zjoin.love.ws.*.dao" />
		<property name="properties">
			<value>
				mappers=tk.mybatis.mapper.common.Mapper,tk.mybatis.mapper.common.MySqlMapper
				IDENTITY=MYSQL
				notEmpty=true
			</value>
		</property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 开启注解方式声明事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>